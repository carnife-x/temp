{"version":3,"sources":["webpack:///./src/templates/post.js"],"names":["query","Post","render","author","this","props","className","_","get","src","withPrefix","alt","categories","container_class","getData","pageContext","site","data","link","to","first_name","last_name","htmlToReact","tags","React","Component"],"mappings":"gTAYO,IAAMA,EAAK,aAQGC,E,gLACjBC,OAAA,WAAU,IAiBcC,EAjBf,OACL,OACI,kBAAC,IAAWC,KAAKC,MACjB,6BAASC,UAAU,QACjB,yBAAKA,UAAU,2BACZC,IAAEC,IAAIJ,KAAKC,MAAO,gCAAiC,OACpD,yBAAKC,UAAU,eACb,yBAAKG,IAAKC,YAAWH,IAAEC,IAAIJ,KAAKC,MAAO,gCAAiC,OAAQM,IAAKJ,IAAEC,IAAIJ,KAAKC,MAAO,oCAAqC,SAG9I,4BAAQC,UAAU,gBACfC,IAAEC,IAAIJ,KAAKC,MAAO,qCAAsC,OACvD,kBAAC,IAAD,iBAAwBD,KAAKC,MAA7B,CAAoCO,WAAYL,IAAEC,IAAIJ,KAAKC,MAAO,qCAAsC,MAAOQ,gBAAiB,gBAElI,wBAAIP,UAAU,eAAeC,IAAEC,IAAIJ,KAAKC,MAAO,gCAAiC,OAChF,yBAAKC,UAAU,cACZC,IAAEC,IAAIJ,KAAKC,MAAO,iCAAkC,SAC7CF,EAASW,YAAQ,EAAKT,MAAMU,YAAYC,KAAKC,KAAMV,IAAEC,IAAI,EAAKH,MAAO,iCAAkC,QAElGa,KACL,qCAAU,kBAAC,IAAD,CAAMC,GAAIT,YAAWP,EAAOe,OAAQf,EAAOiB,WAA3C,IAAwDjB,EAAOkB,YAEzE,qCAAWlB,EAAOiB,WAAlB,IAA+BjB,EAAOkB,cAKlD,yBAAKf,UAAU,cACZgB,YAAYf,IAAEC,IAAIJ,KAAKC,MAAO,mBAAoB,QAEpDE,IAAEC,IAAIJ,KAAKC,MAAO,+BAAgC,OACnD,4BAAQC,UAAU,gBAChB,kBAAC,IAAD,iBAAkBF,KAAKC,MAAvB,CAA8BkB,KAAMhB,IAAEC,IAAIJ,KAAKC,MAAO,+BAAgC,c,GAjCtEmB,IAAMC","file":"component---src-templates-post-js-b1623d6e78ea71cc60c2.js","sourcesContent":["import React from 'react';\r\nimport _ from 'lodash';\r\nimport moment from 'moment-strftime';\r\nimport {graphql} from 'gatsby';\r\n\r\nimport {Layout} from '../components/index';\r\nimport {withPrefix, getData, Link, htmlToReact} from '../utils';\r\nimport BlogPostCategories from '../components/BlogPostCategories';\r\nimport BlogPostTags from '../components/BlogPostTags';\r\n\r\n// this minimal GraphQL query ensures that when 'gatsby develop' is running,\r\n// any changes to content files are reflected in browser\r\nexport const query = graphql`\r\n  query($url: String) {\r\n    sitePage(path: {eq: $url}) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nexport default class Post extends React.Component {\r\n    render() {\r\n        return (\r\n            <Layout {...this.props}>\r\n            <article className=\"post\">\r\n              <div className=\"container container--md\">\r\n                {_.get(this.props, 'pageContext.frontmatter.image', null) && (\r\n                <div className=\"post__image\">\r\n                  <img src={withPrefix(_.get(this.props, 'pageContext.frontmatter.image', null))} alt={_.get(this.props, 'pageContext.frontmatter.image_alt', null)} />\r\n                </div>\r\n                )}\r\n                <header className=\"post__header\">\r\n                  {_.get(this.props, 'pageContext.frontmatter.categories', null) && (\r\n                    <BlogPostCategories {...this.props} categories={_.get(this.props, 'pageContext.frontmatter.categories', null)} container_class={'post__meta'} />\r\n                  )}\r\n                  <h1 className=\"post__title\">{_.get(this.props, 'pageContext.frontmatter.title', null)}</h1>\r\n                  <div className=\"post__meta\">\r\n                    {_.get(this.props, 'pageContext.frontmatter.author', null) && ((() => {\r\n                        let author = getData(this.props.pageContext.site.data, _.get(this.props, 'pageContext.frontmatter.author', null));\r\n                        return (\r\n                          author.link ? (\r\n                            <span> by <Link to={withPrefix(author.link)}>{author.first_name} {author.last_name}</Link></span>\r\n                          ) : \r\n                            <span> by {author.first_name} {author.last_name}</span>\r\n                        );\r\n                    })())}\r\n                  </div>\r\n                </header>\r\n                <div className=\"post__copy\">\r\n                  {htmlToReact(_.get(this.props, 'pageContext.html', null))}\r\n                </div>\r\n                {_.get(this.props, 'pageContext.frontmatter.tags', null) && (\r\n                <footer className=\"post__footer\">\r\n                  <BlogPostTags {...this.props} tags={_.get(this.props, 'pageContext.frontmatter.tags', null)} />\r\n                </footer>\r\n                )}\r\n              </div>\r\n            </article>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n"],"sourceRoot":""}